class EqualsBreakReflexive {     @Override     public boolean equals(Object obj) {          if(this == obj){               return false;          }          return super.equals(obj);     }}class EqualsBreaksSymmetric{     public boolean sym;     public EqualsBreaksSymmetric(boolean b) {          this.sym = b;     }     @Override     public boolean equals(Object obj) {          return sym;     }}class EqualsBreaksTransitive{     private int por;     public EqualsBreaksTransitive(int por){          this.por=por;     }     @Override     public boolean equals(Object obj) {          if (por == 1){               return true;          }          return false;     }}public class Main {     public static void main(String[] arg){          System.out.println("////// BREAK REFLEXIVE //////");          var r = new EqualsBreakReflexive();          System.out.println("r = r - " + r.equals(r) + "   but it should be true");          System.out.println();          System.out.println("////// BREAK SYMMETRIC //////");          var s1 = new EqualsBreaksSymmetric(true);          var s2 = new EqualsBreaksSymmetric(false);          System.out.println("s1 = s2 - " + s1.equals(s2));          System.out.println("s2 = s1 - " + s2.equals(s1));          System.out.println();          System.out.println("////// BREAK TRANSITIVE //////");          var t1=new EqualsBreaksTransitive(1);          var t2=new EqualsBreaksTransitive(2);          var t3=new EqualsBreaksTransitive(3);          System.out.println("t1 | t2 = " + t1.equals(t2));          System.out.println("t2 | t3 = " + t2.equals(t3));          System.out.println("t1 | t3 = " + t1.equals(t3));          System.out.println();     }}